version: '3.3'

services:
  redis: # 1개만 운영하는 Standalone 모드로 설정
    container_name: zoo-redis-standalone
    image: redis
    command: redis-server --requirepass zooredis --port 6001
    restart: always
    labels:
      - "name=zoo-redis"
      - "mode=standalone"
    volumes:
      - zoo-redis-standalone:/var/lib/redis/6001/data
    ports:
      - 6001:6001

  zookeeper:
    container_name: zoo-zookeeper
    image: wurstmeister/zookeeper:3.4.6
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

    volumes:
      - zoo-zk-data:/var/lib/zookeeper/data
      - zoo-zk-log:/var/lib/zookeeper/log

  kafka:
    container_name: zoo-kafka
    image: wurstmeister/kafka:2.12-2.3.0
    hostname: kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_PORT: 9092
      #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS:
        '
        zoo.queueing.push.test:1:1
        '
    volumes:
    - zoo-kafka-data:/var/lib/kafka/data

volumes:
  zoo-redis-standalone:
  zoo-zk-data:
  zoo-zk-log:
  zoo-kafka-data:
